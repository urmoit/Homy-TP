plugins {
    id 'fabric-loom' version "1.6.+"
    id 'maven-publish'
    id 'java-library'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven {
        url 'https://maven.fabricmc.net/'
    }
    mavenCentral()
    // MymodLibrary will be required as a mod dependency
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "homemod" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources']
            exclude '.cache', '**/.DS_Store'
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    
    // MymodLibrary is required as a mod dependency in fabric.mod.json
    
    // Add these for better compatibility
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version
    }
}

tasks.withType(ProcessResources).configureEach {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release = 21
    options.compilerArgs += ["-Xlint:deprecation"]
}

java {
    withSourcesJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archives_base_name}"}
    }
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Built-By': System.getProperty('user.name'),
                'Built-JDK': System.getProperty('java.version'),
                'Build-Time': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        )
    }
}